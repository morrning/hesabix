/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.3.2 (2020-06-10)
 */
! function () {
    "use strict";
    var e = tinymce.util.Tools.resolve("tinymce.PluginManager"),
        o = function (o) {
            var e = o.getContent({
                source_view: !0
            });
            o.windowManager.open({
                title: "کد منبع",
                size: "large",
                body: {
                    type: "panel",
                    items: [{
                        type: "textarea",
                        name: "code"
                    }]
                },
                buttons: [{
                    type: "cancel",
                    name: "cancel",
                    text: "لغو"
                }, {
                    type: "submit",
                    name: "save",
                    text: "ذخیره",
                    primary: !0
                }],
                initialData: {
                    code: e
                },
                onSubmit: function (e) {
                    var t, n;
                    t = o, n = e.getData().code, t.focus(), t.undoManager.transact(function () {
                        t.setContent(n)
                    }), t.selection.setCursorLocation(), t.nodeChanged(), e.close()
                }
            })
        };
    ! function t() {
        e.add("code", function (e) {
            var t, n;
            return (t = e).addCommand("mceCodeEditor", function () {
                o(t)
            }), (n = e).ui.registry.addButton("code", {
                icon: "sourcecode",
                tooltip: "کد منبع",
                onAction: function () {
                    return o(n)
                }
            }), n.ui.registry.addMenuItem("code", {
                icon: "sourcecode",
                text: "کد منبع",
                onAction: function () {
                    return o(n)
                }
            }), {}
        })
    }()
}();